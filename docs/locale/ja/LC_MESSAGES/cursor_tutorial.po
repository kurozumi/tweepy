# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2009, Joshua Roesslein
# This file is distributed under the same license as the tweepy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: tweepy 3.6.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-11-24 23:01+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../cursor_tutorial.rst:5
msgid "Cursor Tutorial"
msgstr "カーソルのチュートリアル"

#: ../../cursor_tutorial.rst:7
msgid "This tutorial describes details on pagination with Cursor objects."
msgstr ""
"このチュートリアルでは、Cursorオブジェクトによるページネーションの詳細について説明します。"

#: ../../cursor_tutorial.rst:10
msgid "Introduction"
msgstr "イントロダクション"

#: ../../cursor_tutorial.rst:12
msgid ""
"We use pagination a lot in Twitter API development. Iterating through "
"timelines, user lists, direct messages, etc. In order to perform "
"pagination we must supply a page/cursor parameter with each of our "
"requests. The problem here is this requires a lot of boiler plate code "
"just to manage the pagination loop. To help make pagination easier and "
"require less code Tweepy has the Cursor object."
msgstr ""
"Twitter APIの開発では、ページネーションを多く使用しています。"
"タイムライン、ユーザリスト、ダイレクトメッセージなどを繰り返し処理するページングを実行するには、"
"リクエストごとにページ/カーソルパラメータを指定する必要があります。"
"ここでの問題は、ページネーションループを管理するために多くのボイラープレートコードが必要になることです。"
"ページ番号を簡単にし、必要なコードを少なくするためにTweepyにはCursorオブジェクトがあります。"

#: ../../cursor_tutorial.rst:20
msgid "Old way vs Cursor way"
msgstr "古い方法とカーソル"

#: ../../cursor_tutorial.rst:22
msgid ""
"First let's demonstrate iterating the statues in the authenticated user's"
" timeline. Here is how we would do it the \"old way\" before Cursor "
"object was introduced::"
msgstr ""
"最初に認証されたユーザーのタイムラインのツイートを繰り返し表示する方法を示します。"
"Cursorオブジェクトが導入される前に、「古い方法」とする方法は次のとおりです。"

#: ../../cursor_tutorial.rst:38
msgid ""
"As you can see we must manage the \"page\" parameter manually in our "
"pagination loop. Now here is the version of the code using Cursor "
"object::"
msgstr ""
"ご覧のとおり、ページネーションループをするためには「page」パラメータを管理する必要があります。"
"次に、Cursorオブジェクトを使用したコードを示します。"

#: ../../cursor_tutorial.rst:46
msgid ""
"Now that looks much better! Cursor handles all the pagination work for us"
" behind the scene so our code can now focus entirely on processing the "
"results."
msgstr ""
"今それははるかに良く見えます！"
"カーソルはシーンの背後にある私たちのすべてのページ分割作業を処理するので、"
"コードは結果を処理することに集中することができます。"

#: ../../cursor_tutorial.rst:51
msgid "Passing parameters into the API method"
msgstr "APIメソッドにパラメータを渡す"

#: ../../cursor_tutorial.rst:53
msgid "What if you need to pass in parameters to the API method?"
msgstr "APIメソッドにパラメータを渡す必要がある場合は以下のようにします。"

#: ../../cursor_tutorial.rst:59
msgid ""
"Since we pass Cursor the callable, we can not pass the parameters "
"directly into the method. Instead we pass the parameters into the Cursor "
"constructor method::"
msgstr ""
"callableをCursorに渡すときパラメータを直接メソッドに渡すことはできません。"
"代わりに、パラメータをCursorコンストラクタメソッドに渡します。::"

#: ../../cursor_tutorial.rst:65
msgid ""
"Now Cursor will pass the parameter into the method for us when ever it "
"makes a request."
msgstr ""
"Cursorはリクエストがあったときにパラメータをメソッドに渡します。"

#: ../../cursor_tutorial.rst:69
msgid "Items or Pages"
msgstr ""

#: ../../cursor_tutorial.rst:71
msgid ""
"So far we have just demonstrated pagination iterating per an item. What "
"if instead you want to process per a page of results? You would use the "
"pages() method::"
msgstr ""
"これまでは、アイテムごとにページネーションの反復処理を実演しました。"
"代わりに結果のページごとに処理したい場合は pages()メソッドを使用します。"

#: ../../cursor_tutorial.rst:81
msgid "Limits"
msgstr ""

#: ../../cursor_tutorial.rst:83
msgid ""
"What if you only want n items or pages returned? You pass into the "
"items() or pages() methods the limit you want to impose."
msgstr ""
"n個のアイテムやページだけが返されるようにしたい場合は、"
"items()メソッドまたはpages()メソッドに制限を渡します。"

